{"version":3,"file":"bundle.js","mappings":"mBAEA,IAAMA,EAAO,OACPC,EAAY,Q,8wBCCX,IAAMC,EAAMC,GACf,SAAAD,EAAYF,EAAMI,I,4FAASC,CAAA,KAAAH,GACvBI,KAAKN,KAAOA,EACZM,KAAKF,QAAUA,CACnB,I,kqBCRJ,IAEaG,EAAM,WAKd,O,EAJD,SAAAA,EAAYP,EAAMQ,EAAMC,I,4FAAQJ,CAAA,KAAAE,GAC5BD,KAAKN,KAAOA,EACZM,KAAKE,KAAOA,EACZF,KAAKG,OAASA,CAClB,G,EAAC,EAAAC,IAAA,MAAAC,IAED,WACI,OAAOL,KAAKE,MAAQF,KAAKG,OAASH,KAAKG,OAC3C,GAAC,CAAAC,IAAA,eAAAE,MAED,WACIC,QAAQC,IAAI,GAADC,OAAIT,KAAKN,KAAI,iBAAAe,OAAgBT,KAAKU,KACjD,M,6EAAC,CAbc,GCWnBH,QAAQC,IAAIG,EAAOhB,EHTL,IGUdY,QAAQC,IHPGI,IGQXL,QAAQC,IAJK,UFXN,SAAgBd,EAAMC,GACzBY,QAAQC,IAAI,OAADC,OAAQf,EAAI,KAAAe,OAAId,GAC/B,CEeAkB,CAAOF,EAAOhB,GAEd,IAAMmB,EAAQ,IAAIlB,EAAO,OAAQ,YAEjCW,QAAQC,IAAIM,GAEI,IAAIC,EAAiB,OAAQ,GAAI,MAEzCC,eAER,IAAMC,EAAU,IAAIhB,EAAO,SAAU,GAAI,MAEzCM,QAAQC,IAAIS,GAEZA,EAAQD,eDXJT,QAAQC,IAAI,4B","sources":["webpack://aula-95---webpack-(boilerplate)/./src/modulo1.js","webpack://aula-95---webpack-(boilerplate)/./src/modulo2.js","webpack://aula-95---webpack-(boilerplate)/./src/modulo3.js","webpack://aula-95---webpack-(boilerplate)/./src/index.js"],"sourcesContent":["// ES6 Modules é uma maneira de trabalhar com JavaScript de forma moderna, podemos fazer isso por meio do webpack e babel (para transpilar o código e permitir funcionamento em qualquer versão de navegador)\r\n\r\nconst nome = 'Luiz'; \r\nconst sobrenome = 'Silva';\r\nconst idade = 19;\r\n\r\nfunction soma(x, y) {\r\n    return x + y;\r\n}\r\n\r\n// \"export\" exporta o módulo para ser utilizado em outras páginas por meio do \"import\"\r\nexport { nome, sobrenome, idade, soma }; // podemos exportar uma variável, classe, objeto, o que quer que seja","export function falaOi(nome, sobrenome) { // podemos exportar uma função diretamente em sua declaração\r\n    console.log(`Olá ${nome} ${sobrenome}`);\r\n}\r\n\r\nexport class Animal {\r\n    constructor(nome, especie) {\r\n        this.nome = nome;\r\n        this.especie = especie\r\n    }\r\n}\r\n","const cpf = 51159886822; // essa variável só estará disponível no arquivo \"modulo3\", pois a mesma não foi exportada\r\n\r\nexport class Pessoa {\r\n    constructor(nome, peso, altura) {\r\n        this.nome = nome;\r\n        this.peso = peso;\r\n        this.altura = altura;\r\n    }\r\n\r\n    get imc() {\r\n        return this.peso / (this.altura * this.altura);\r\n    }\r\n\r\n    apresentaImc() {\r\n        console.log(`${this.nome}, seu IMC É: ${this.imc}`);\r\n    }\r\n}\r\n\r\nexport default function funcaoDefault() { // quando exportamos uma função padrão, ela é importada como componente principal do módulo\r\n    // **OBS: só pode haver uma exportação default por módulo criado\r\n    console.log('Esta é uma função default');\r\n}\r\n","import { nome as nome2, sobrenome, idade, soma } from './modulo1'; // importando os componentes do módulo exportad\r\n// as significa \"como\"\r\n// para evitar a colisão de nomes de variáveis, pode-se utilizar \"as\", dessa maneira o valor exportado recebe outro nome de variável\r\n\r\nimport { falaOi, Animal } from './modulo2'; // importando função e classe exportadas pelo arquivo \"modulo2.js\"\r\n\r\nimport * as meuModulo from './modulo3'; // poode-se importar tudo que é exportado de uma vez de um módulo\r\n\r\nimport teste, { Pessoa } from './modulo3'; // quando importamos algo como default do lado do exportado, não necessita-se de chaves para o export\r\n// podemos importar a função default e os demais itens por meio de \"chaves {}\"\r\n\r\nconst nome = 'Helena'; // agora a variável nome pode ser declarada\r\n\r\nconsole.log(nome2, sobrenome, idade); // nome2 terá o valor importado do módulo\r\nconsole.log(soma(5, 5));\r\nconsole.log(nome); // saída = helena\r\n\r\nfalaOi(nome2, sobrenome); // utilizando a função importada de um módulo. Podemos enviar parâmetros dinâmicos, importados de outros módulos\r\n\r\nconst anim1 = new Animal('Ayla', 'Cachorro'); // criando uma instância da classe \"Animal\"\r\n\r\nconsole.log(anim1); // um objeto animal foi criado\r\n\r\nconst pessoa1 = new meuModulo.Pessoa('Luiz', 80, 1.75); // desta maneira, criamos uma espécie de \"instância\" do módulo exportado, onde para acessar seus valores, usamos a notação de ponto\r\n\r\npessoa1.apresentaImc(); // utilizando o método get imc do objeto \"Pessoa()\"\r\n\r\nconst pessoa2 = new Pessoa('Helena', 65, 1.73);\r\n\r\nconsole.log(pessoa2);\r\n\r\npessoa2.apresentaImc(); // utilizando o método no prototype de \"pessoa2\"\r\n\r\nteste(); // executando a função importada por default\r\n"],"names":["nome","sobrenome","Animal","_createClass","especie","_classCallCheck","this","Pessoa","peso","altura","key","get","value","console","log","concat","imc","nome2","x","falaOi","anim1","meuModulo","apresentaImc","pessoa2"],"sourceRoot":""}